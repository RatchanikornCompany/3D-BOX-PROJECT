{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react_three_js/src/three_make_shape.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd\";\nimport { Slider, InputNumber, Row, Col } from \"antd\";\n\nclass IntegerStep extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: 1\n    };\n\n    this.onChange = value => {\n      this.setState({\n        inputValue: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      inputValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      min: 1,\n      max: 20,\n      onChange: this.onChange,\n      value: typeof inputValue === \"number\" ? inputValue : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      min: 1,\n      max: 20,\n      style: {\n        margin: \"0 16px\"\n      },\n      value: inputValue,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nclass DecimalStep extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: 0\n    };\n\n    this.onChange = value => {\n      if (isNaN(value)) {\n        return;\n      }\n\n      this.setState({\n        inputValue: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      inputValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 1,\n      onChange: this.onChange,\n      value: typeof inputValue === \"number\" ? inputValue : 0,\n      step: 0.01,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      min: 0,\n      max: 1,\n      style: {\n        margin: \"0 16px\"\n      },\n      step: 0.01,\n      value: inputValue,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(IntegerStep, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(DecimalStep, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }\n})), mountNode); // export default ThreeM;","map":{"version":3,"sources":["/Users/mac/Documents/react_three_js/src/three_make_shape.js"],"names":["React","ReactDOM","Slider","InputNumber","Row","Col","IntegerStep","Component","state","inputValue","onChange","value","setState","render","margin","DecimalStep","isNaN","mountNode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd\";\nimport { Slider, InputNumber, Row, Col } from \"antd\";\n\nclass IntegerStep extends React.Component {\n  state = {\n    inputValue: 1,\n  };\n\n  onChange = (value) => {\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={1}\n            max={20}\n            onChange={this.onChange}\n            value={typeof inputValue === \"number\" ? inputValue : 0}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={1}\n            max={20}\n            style={{ margin: \"0 16px\" }}\n            value={inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nclass DecimalStep extends React.Component {\n  state = {\n    inputValue: 0,\n  };\n\n  onChange = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={0}\n            max={1}\n            onChange={this.onChange}\n            value={typeof inputValue === \"number\" ? inputValue : 0}\n            step={0.01}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={0}\n            max={1}\n            style={{ margin: \"0 16px\" }}\n            step={0.01}\n            value={inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nReactDOM.render(\n  <div>\n    <IntegerStep />\n    <DecimalStep />\n  </div>,\n  mountNode\n);\n\n// export default ThreeM;\n"]},"metadata":{},"sourceType":"module"}