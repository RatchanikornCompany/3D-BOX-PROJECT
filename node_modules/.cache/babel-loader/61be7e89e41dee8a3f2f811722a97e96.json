{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react_three_js/src/three_test.js\";\nimport * as React from \"react\";\nimport { Slider, InputNumber, Row, Col, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nexport default class DecimalStep extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: 0\n    };\n\n    this.onChange = value => {\n      if (isNaN(value)) {\n        return;\n      }\n\n      this.setState({\n        inputValue: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      inputValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 1,\n      onChange: this.onChange,\n      value: typeof inputValue === \"number\" ? inputValue : 0,\n      step: 0.01,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      min: 0,\n      max: 1,\n      style: {\n        margin: \"0 16px\"\n      },\n      step: 0.01,\n      value: inputValue,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Documents/react_three_js/src/three_test.js"],"names":["React","Slider","InputNumber","Row","Col","Button","DecimalStep","Component","state","inputValue","onChange","value","isNaN","setState","render","margin"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,MAAxC,QAAsD,MAAtD;AACA,OAAO,oBAAP;AACA,eAAe,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACNC,MAAAA,UAAU,EAAE;AADN,KAD+C;;AAAA,SAKvDC,QALuD,GAK3CC,KAAD,IAAW;AACpB,UAAIC,KAAK,CAACD,KAAD,CAAT,EAAkB;AAChB;AACD;;AACD,WAAKE,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAEE;AADA,OAAd;AAGD,KAZsD;AAAA;;AAcvDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,wBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,GAAG,EAAE,CAFP;AAGE,MAAA,QAAQ,EAAE,KAAKE,QAHjB;AAIE,MAAA,KAAK,EAAE,OAAOD,UAAP,KAAsB,QAAtB,GAAiCA,UAAjC,GAA8C,CAJvD;AAKE,MAAA,IAAI,EAAE,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAUE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,GAAG,EAAE,CAFP;AAGE,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,IAAI,EAAE,IAJR;AAKE,MAAA,KAAK,EAAEN,UALT;AAME,MAAA,QAAQ,EAAE,KAAKC,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CADF;AAuBD;;AAvCsD","sourcesContent":["import * as React from \"react\";\nimport { Slider, InputNumber, Row, Col, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nexport default class DecimalStep extends React.Component {\n  state = {\n    inputValue: 0,\n  };\n\n  onChange = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={0}\n            max={1}\n            onChange={this.onChange}\n            value={typeof inputValue === \"number\" ? inputValue : 0}\n            step={0.01}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={0}\n            max={1}\n            style={{ margin: \"0 16px\" }}\n            step={0.01}\n            value={inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}