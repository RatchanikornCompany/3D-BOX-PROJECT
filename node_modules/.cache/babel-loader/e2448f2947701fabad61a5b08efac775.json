{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react-three/src/three_make_shape.js\";\nimport React, { Fragment } from \"react\";\nimport * as THREE from \"three\";\nimport OrbitControls from \"three-orbitcontrols\";\nvar controls, renderer, scene, camera;\nvar A = 50;\nvar B = 50;\nvar C = 50;\nvar D = 0.5;\nvar w = window.innerWidth;\nvar h = window.innerHeight;\nvar L = 0.3;\nvar leng_lr_lib = A * L;\nvar pivot_a_front;\nvar pivot_lid_b_left;\nvar pivot_b_left;\nvar pivot_b_right;\nvar pivot_top;\nvar pivot_all;\n\nconst ThreeM = () => {\n  const init = () => {\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000); //เซ็ทตำแหน่งของกล้อง\n\n    camera = new THREE.PerspectiveCamera(50, w / h, 1, 5000);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = 800; //สร้างแกนหมุน\n\n    const axesHelper = new THREE.AxesHelper(700);\n    scene.add(axesHelper); //เซ็ทตำแหน่งสีของด้านแต่ล่ะด้าน\n\n    const material = new THREE.MeshBasicMaterial({\n      color: \"#FFFFFF\",\n      side: THREE.DoubleSide,\n      wireframe: true\n    }); // ลิ้นกันฝุ่น\n\n    var lr_lid_shape = new THREE.Shape();\n    lr_lid_shape.moveTo(0, 0); // Front ....................................................\n\n    lr_lid_shape.lineTo(0, leng_lr_lib * 0.1 | 0);\n    lr_lid_shape.lineTo(B * 0.05, leng_lr_lib * 0.15 | 0);\n    lr_lid_shape.lineTo(B * 0.15, leng_lr_lib * 0.9 | 0); // Center ...................................................\n\n    lr_lid_shape.lineTo(B * 0.2, leng_lr_lib);\n    lr_lid_shape.lineTo(B, leng_lr_lib); // Rear......................................................\n\n    lr_lid_shape.lineTo(B, 0);\n    lr_lid_shape.lineTo(0, 0);\n    var lr_lid = new THREE.ShapeGeometry(lr_lid_shape); // เซทฉาก\n\n    var side_lid_b_left = new THREE.Mesh(lr_lid, material);\n    side_lid_b_left.rotation.y = Math.PI; // สร้างจุดหมุน\n\n    pivot_lid_b_left = new THREE.Object3D();\n    pivot_lid_b_left.position.set(0, C, 0);\n    pivot_lid_b_left.add(side_lid_b_left);\n    pivot_all = new THREE.Object3D();\n    scene.add(pivot_all);\n    pivot_all.add(pivot_a_front, pivot_b_left, pivot_b_right, pivot_top);\n    /* ********** Model Created ********** */\n    //Webgl Render\n\n    renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(w, h);\n    document.getElementById(\"webgl\").append(renderer.domElement); //The mouse controls\n\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.minZoom = 0.5;\n    controls.maxZoom = 10; // setInterval(rotations(), 5000);\n  };\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    controls.update();\n    renderer.render(scene, camera);\n  }; // const rotations = () =>{\n  //   pivot_b_right.rotation.y = -Math.PI / 2;\n  //   pivot_top.rotation.x = Math.PI / 2;\n  //   pivot_b_left.rotation.y = Math.PI / 2;\n  //   pivot_group_a_back.rotation.y = Math.PI / 2;\n  //   pivot_bottom.rotation.x = -Math.PI / 2;\n  //   pivot_lid_b_left.rotation.x = Math.PI / 2;\n  //   pivot_lid_b_left_d.rotation.x = -Math.PI / 2;\n  //   pivot_lid_b_right.rotation.x = Math.PI / 2;\n  //   pivot_lid_b_right_d.rotation.x = -Math.PI / 2;\n  //   pivot_top_lid.rotation.x = Math.PI /2;\n  //   pivot_bottom_lid.rotation.x = -Math.PI /2;\n  //   pivot_glue_lid.rotation.y = Math.PI / 2;\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, init(), animate());\n};\n\nexport default ThreeM;","map":{"version":3,"sources":["/Users/mac/Desktop/react-three/src/three_make_shape.js"],"names":["React","Fragment","THREE","OrbitControls","controls","renderer","scene","camera","A","B","C","D","w","window","innerWidth","h","innerHeight","L","leng_lr_lib","pivot_a_front","pivot_lid_b_left","pivot_b_left","pivot_b_right","pivot_top","pivot_all","ThreeM","init","Scene","background","Color","PerspectiveCamera","position","x","y","z","axesHelper","AxesHelper","add","material","MeshBasicMaterial","color","side","DoubleSide","wireframe","lr_lid_shape","Shape","moveTo","lineTo","lr_lid","ShapeGeometry","side_lid_b_left","Mesh","rotation","Math","PI","Object3D","set","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","document","getElementById","append","domElement","minZoom","maxZoom","animate","requestAnimationFrame","update","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport * as THREE from \"three\";\nimport OrbitControls from \"three-orbitcontrols\";\n\nvar controls, renderer, scene, camera;\n\nvar A = 50;\nvar B = 50;\nvar C = 50;\nvar D = 0.5;\nvar w = window.innerWidth;\nvar h = window.innerHeight;\nvar L = 0.3;\nvar leng_lr_lib = A * L;\n\nvar pivot_a_front;\nvar pivot_lid_b_left;\nvar pivot_b_left;\nvar pivot_b_right;\nvar pivot_top;\nvar pivot_all;\n\nconst ThreeM = () => {\n\n  const init = () => {\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    //เซ็ทตำแหน่งของกล้อง\n    camera = new THREE.PerspectiveCamera(50, w/h, 1, 5000);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = 800;\n\n    //สร้างแกนหมุน\n    const axesHelper = new THREE.AxesHelper(700);\n    scene.add(axesHelper);\n\n    //เซ็ทตำแหน่งสีของด้านแต่ล่ะด้าน\n    const material = new THREE.MeshBasicMaterial({\n      color: \"#FFFFFF\",\n      side: THREE.DoubleSide,\n      wireframe: true,\n    })\n\n    // ลิ้นกันฝุ่น\n    var lr_lid_shape = new THREE.Shape();\n\n    lr_lid_shape.moveTo(0, 0);\n    // Front ....................................................\n    lr_lid_shape.lineTo(0, (leng_lr_lib * 0.1) | 0);\n    lr_lid_shape.lineTo(B * 0.05, (leng_lr_lib * 0.15) | 0);\n    lr_lid_shape.lineTo(B * 0.15, (leng_lr_lib * 0.9) | 0);\n    // Center ...................................................\n    lr_lid_shape.lineTo(B * 0.2, leng_lr_lib);\n    lr_lid_shape.lineTo(B, leng_lr_lib);\n    // Rear......................................................\n    lr_lid_shape.lineTo(B, 0);\n    lr_lid_shape.lineTo(0, 0);\n\n    var lr_lid = new THREE.ShapeGeometry(lr_lid_shape);\n\n    // เซทฉาก\n\n    var side_lid_b_left = new THREE.Mesh(lr_lid, material);\n    side_lid_b_left.rotation.y = Math.PI;\n\n    // สร้างจุดหมุน\n\n    pivot_lid_b_left = new THREE.Object3D();\n    pivot_lid_b_left.position.set(0,C,0);\n    pivot_lid_b_left.add(side_lid_b_left);\n\n    pivot_all = new THREE.Object3D();\n    scene.add(pivot_all);\n    pivot_all.add(\n      pivot_a_front,\n      pivot_b_left,\n      pivot_b_right,\n      pivot_top\n    )\n\n    /* ********** Model Created ********** */\n\n    //Webgl Render\n    renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(w, h);\n    document.getElementById(\"webgl\").append(renderer.domElement);\n\n    //The mouse controls\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.minZoom = 0.5;\n    controls.maxZoom = 10;\n\n    // setInterval(rotations(), 5000);\n  }\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    controls.update();\n    renderer.render(scene, camera);\n  }\n\n  // const rotations = () =>{\n  //   pivot_b_right.rotation.y = -Math.PI / 2;\n  //   pivot_top.rotation.x = Math.PI / 2;\n  //   pivot_b_left.rotation.y = Math.PI / 2;\n  //   pivot_group_a_back.rotation.y = Math.PI / 2;\n  //   pivot_bottom.rotation.x = -Math.PI / 2;\n  //   pivot_lid_b_left.rotation.x = Math.PI / 2;\n  //   pivot_lid_b_left_d.rotation.x = -Math.PI / 2;\n  //   pivot_lid_b_right.rotation.x = Math.PI / 2;\n  //   pivot_lid_b_right_d.rotation.x = -Math.PI / 2;\n  //   pivot_top_lid.rotation.x = Math.PI /2;\n  //   pivot_bottom_lid.rotation.x = -Math.PI /2;\n  //   pivot_glue_lid.rotation.y = Math.PI / 2;\n  // }\n\n  return (\n    <Fragment>\n      {init()}\n      {animate()}\n    </Fragment>\n  )\n}\n\nexport default ThreeM;"]},"metadata":{},"sourceType":"module"}