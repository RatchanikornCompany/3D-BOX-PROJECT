{"ast":null,"code":"import React, { Fragment } from \"react\";\nimport * as THREE from \"three\";\nimport OrbitControls from \"three-orbitcontrols\";\n\nconst Three = () => {\n  const init = () => {\n    var A = 52;\n    var B = 52;\n    var C = 52;\n    var w = Window.innerWidth;\n    var h = Window.innerHeight;\n    var scene = new THREE.Scene(); // scene.background = new THREE.Color(0xffffff);\n\n    scene.background = new THREE.Color(0x000000); //The smaller the first number is, the closer the cube appears\n\n    var camera = new THREE.PerspectiveCamera(50, w / h, 1, 5000);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = 800;\n    const axesHelper = new THREE.AxesHelper(100); // scene.add(axesHelper)\n    // Torus Geometry\n\n    const material = new THREE.MeshBasicMaterial({\n      color: '#FFFFFF',\n      side: THREE.DoubleSide,\n      wireframe: false\n    }); //* ลิ้นด้านล่าง\n\n    var lr_lid_shape_d = new THREE.Shape();\n    lr_lid_shape_d.moveTo(0, 0);\n    lr_lid_shape_d.lineTo(0, A * 0.47 | 0); // 0, 24\n\n    lr_lid_shape_d.lineTo(B * 0.5 | 0, A * 0.47 | 0); // 26, 24\n\n    lr_lid_shape_d.lineTo(B * 0.5 | 0, A * 0.29 | 0); // 26, 15\n\n    lr_lid_shape_d.lineTo(B, 0); // 52, 0\n\n    lr_lid_shape_d.lineTo(0, 0);\n    var lr_lid_d = new THREE.ShapeGeometry(lr_lid_shape_d); //* ลิ้นล่างซ้าย\n\n    var side_pp_left_d = new THREE.Mesh(lr_lid_d, material);\n    side_pp_left_d.receiveShadow = true;\n    side_pp_left_d.castShadow = true;\n    side_pp_left_d.rotation.x = Math.PI;\n    scene.add(side_pp_left_d); //* Webgl Render\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(w, h);\n    document.getElementById('webgl').append(renderer.domElement); //* The mouse controls.\n\n    var controls = new OrbitControls(camera, renderer.domElement);\n    controls.minZoom = 0.5;\n    controls.maxZoom = 10;\n  };\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    controls.update();\n    renderer.render(scene, camera);\n  }; // return (<Fragment><p>55555</p></Fragment>)\n\n};\n\nexport default Three;","map":{"version":3,"sources":["/Users/mac/Documents/react/react-three/react-three/src/three.js"],"names":["React","Fragment","THREE","OrbitControls","Three","init","A","B","C","w","Window","innerWidth","h","innerHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","x","y","z","axesHelper","AxesHelper","material","MeshBasicMaterial","color","side","DoubleSide","wireframe","lr_lid_shape_d","Shape","moveTo","lineTo","lr_lid_d","ShapeGeometry","side_pp_left_d","Mesh","receiveShadow","castShadow","rotation","Math","PI","add","renderer","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","document","getElementById","append","domElement","controls","minZoom","maxZoom","animate","requestAnimationFrame","update","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport * as THREE from \"three\";\nimport OrbitControls from \"three-orbitcontrols\";\nconst Three = () => {\n\n  const init = () => {\n    var A = 52;\n    var B = 52;\n    var C = 52;\n    var w = Window.innerWidth;\n    var h = Window.innerHeight;\n\n    var scene = new THREE.Scene();\n    // scene.background = new THREE.Color(0xffffff);\n    scene.background = new THREE.Color(0x000000);\n\n    //The smaller the first number is, the closer the cube appears\n    var camera = new THREE.PerspectiveCamera(50, w / h, 1, 5000);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = 800;\n\n    const axesHelper = new THREE.AxesHelper(100);\n    // scene.add(axesHelper)\n\n    // Torus Geometry\n    const material = new THREE.MeshBasicMaterial({\n      color: '#FFFFFF',\n      side: THREE.DoubleSide,\n      wireframe: false\n    });\n\n    //* ลิ้นด้านล่าง\n    var lr_lid_shape_d = new THREE.Shape();\n    lr_lid_shape_d.moveTo(0, 0);\n    lr_lid_shape_d.lineTo(0, (A * 0.47) | 0); // 0, 24\n    lr_lid_shape_d.lineTo((B * 0.5) | 0, (A * 0.47) | 0); // 26, 24\n    lr_lid_shape_d.lineTo((B * 0.5) | 0, (A * 0.29) | 0); // 26, 15\n    lr_lid_shape_d.lineTo(B, 0); // 52, 0\n    lr_lid_shape_d.lineTo(0, 0);\n\n    var lr_lid_d = new THREE.ShapeGeometry(lr_lid_shape_d);\n\n    //* ลิ้นล่างซ้าย\n    var side_pp_left_d = new THREE.Mesh(lr_lid_d, material);\n    side_pp_left_d.receiveShadow = true;\n    side_pp_left_d.castShadow = true;\n    side_pp_left_d.rotation.x = Math.PI;\n    scene.add(side_pp_left_d);\n\n    //* Webgl Render\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(w, h);\n    document.getElementById('webgl').append(renderer.domElement);\n\n\n    //* The mouse controls.\n    var controls = new OrbitControls(camera, renderer.domElement);\n    controls.minZoom = 0.5;\n    controls.maxZoom = 10;\n  }\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    controls.update();\n    renderer.render(scene, camera);\n  }\n\n\n\n  // return (<Fragment><p>55555</p></Fragment>)\n};\n\nexport default Three;\n"]},"metadata":{},"sourceType":"module"}